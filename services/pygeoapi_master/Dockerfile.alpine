# NEEDS MORE WORK: the gdal version lacks many libs like proj and XML expat/xerces!
# see https://pkgs.alpinelinux.org/package/edge/testing/x86/gdal
# FROM python:3.7.3-alpine3.9 as builder
FROM python:3.7.3-alpine3.9

LABEL maintainer="Just van den Broecke <justb4@gmail.com>"

#
# ARGS
#
ARG TIMEZONE="Europe/Amsterdam"
ARG LOCALE="en_US.UTF-8"

# ARG ADD_PYTHON_APK_PACKAGES="python-scipy python-seaborn python-matplotlib"
ARG ADD_PYTHON_APK_PACKAGES=" "
# ARG ADD_PYTHON_PIP_PACKAGES="scikit-learn==0.18"
ARG ADD_PYTHON_PIP_PACKAGES="gunicorn eventlet"

# Tricky: must match installed GDAL version (2.1.3 on Debian Stretch)
# TODO: we really need GDAL >= 2.3 e.g. to use OGR ESRI FeatureServer Driver
ARG GDAL_PYTHON_BINDINGS_VERSION="2.4.0"

#
# ENV settings
#
ENV TZ=${TIMEZONE} \
	DEBIAN_FRONTEND="noninteractive" \
	BUILD_DEPS="gcc build-base libffi-dev postgresql-dev gdal-dev git" \
	PYTHON_CORE_PACKAGES="postgresql-client proj4 gdal" \
	PYTHON_EXTRA_APK_PACKAGES="${ADD_PYTHON_APK_PACKAGES}"  \
	PYTHON_EXTRA_PIP_PACKAGES="${ADD_PYTHON_PIP_PACKAGES}" \
	PYGEOAPI_GITHUB="https://github.com/geopython/pygeoapi.git" \
	PYGEOAPI_HOME="/pygeoapi" \
	PYGEOAPI_CONFIG="${PYGEOAPI_HOME}/local.config.yml" \
	PYGEOAPI_OPENAPI="${PYGEOAPI_HOME}/local.openapi.yml" \
	CONTAINER_NAME="pygeoapi" \
	CONTAINER_HOST="0.0.0.0" \
	CONTAINER_PORT="80" \
	WSGI_WORKERS="4" \
	WSGI_WORKER_TIMEOUT="6000" \
	WSGI_WORKER_CLASS="eventlet"

# All RUNs
RUN echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" > /etc/apk/repositories \
    && echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories \
    && echo "http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories \
    && apk update \
    && apk add --no-cache --virtual .build_deps ${BUILD_DEPS} \
	&& apk add --no-cache ${PYTHON_CORE_PACKAGES} ${PYTHON_EXTRA_APK_PACKAGES} \
	&& ln -s /usr/lib/libproj.so.13 /usr/lib/libproj.so \
    && pip3 install GDAL==${GDAL_PYTHON_BINDINGS_VERSION} \
	&& if [ "x${PYTHON_EXTRA_PIP_PACKAGES}" = "x" ] ;\
	    then \
	        echo "No extra Pip packages to install" ;\
	    else \
	        pip3 install ${PYTHON_EXTRA_PIP_PACKAGES} ;\
	    fi  \
	# Install pygeoapi
	&& git clone ${PYGEOAPI_GITHUB} ${PYGEOAPI_HOME} \
	&& cd ${PYGEOAPI_HOME} \
	&& pip3 install -r requirements.txt \
	&& pip3 install -r requirements-dev.txt \
	&& pip3 install fiona xarray pygeometa \
	&& pip3 install -e . \
	&& rm -rf /var/cache/apk/* /tmp/* /var/tmp/* \
	&& apk --purge del --force-broken-world .build_deps
	# rm -rf /usr/share/hdf5_examples /usr/lib/*.a /usr/bin/gdal* /usr/bin/ogr* /usr/bin/h5*

#FROM python:3.7.3-alpine:3.9
#
#COPY --from=builder /usr/ /usr/
#COPY --from=builder /lib/ /lib/

COPY local.config.yml ${PYGEOAPI_HOME}
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

WORKDIR ${PYGEOAPI_HOME}

ENTRYPOINT ["/entrypoint.sh"]

